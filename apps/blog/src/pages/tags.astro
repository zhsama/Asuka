---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import { getTranslation } from '@/i18n/translation';
import type { Locale } from '@/i18n/translation';
import I18nKeys from '../i18n/keys';
import AsukaConfig from '../../asuka.config';

// 获取所有博客文章
const allPosts = await getCollection('blog', ({ data }) => {
  return data.draft !== true;
});

// 统计标签
const tagCount = new Map<string, number>();
const tagPosts = new Map<string, typeof allPosts>();

allPosts.forEach(post => {
  if (post.data.tags && post.data.tags.length > 0) {
    post.data.tags.forEach(tag => {
      tagCount.set(tag, (tagCount.get(tag) || 0) + 1);
      
      if (!tagPosts.has(tag)) {
        tagPosts.set(tag, []);
      }
      tagPosts.get(tag)!.push(post);
    });
  }
});

// 转换为数组并按文章数量排序
const tags = Array.from(tagCount.entries())
  .sort((a, b) => b[1] - a[1]);

// 计算标签权重，用于调整字体大小
const maxCount = Math.max(...Array.from(tagCount.values()));
const minCount = Math.min(...Array.from(tagCount.values()));

function getTagWeight(count: number): string {
  if (maxCount === minCount) return 'text-base';
  
  const ratio = (count - minCount) / (maxCount - minCount);
  if (ratio >= 0.8) return 'text-2xl';
  if (ratio >= 0.6) return 'text-xl';
  if (ratio >= 0.4) return 'text-lg';
  if (ratio >= 0.2) return 'text-base';
  return 'text-sm';
}

const locale = AsukaConfig.locale as Locale;
const totalTags = tags.length;
---

<Layout 
  title={`${getTranslation(locale, I18nKeys.pages_tags_title)} | ${AsukaConfig.title}`}
  description="博客文章标签页面"
  showBanner={false}
>
  <div class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <!-- Page Header -->
      <header class="mb-12 text-center">
        <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
          {getTranslation(locale, I18nKeys.pages_tags_title)}
        </h1>
        <p class="text-gray-600 dark:text-gray-400">
          共 <span class="font-semibold text-blue-600 dark:text-blue-400">{totalTags}</span> 个标签
        </p>
      </header>

      {tags.length === 0 ? (
        <div class="text-center py-16">
          <div class="mb-4">
            <svg class="mx-auto h-24 w-24 text-gray-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
            </svg>
          </div>
          <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-2">
            暂无标签
          </h2>
          <p class="text-gray-600 dark:text-gray-400">
            还没有发布带标签的文章
          </p>
        </div>
      ) : (
        <div class="space-y-12">
          <!-- Tag Cloud -->
          <section class="tag-cloud-section">
            <h2 class="section-title">标签云</h2>
            <div class="tag-cloud">
              {tags.map(([tag, count]) => (
                <a 
                  href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
                  class={`tag-cloud-item ${getTagWeight(count)}`}
                  title={`${tag} (${count} 篇文章)`}
                >
                  {tag}
                </a>
              ))}
            </div>
          </section>

          <!-- Tags List -->
          <section class="tags-list-section">
            <h2 class="section-title">全部标签</h2>
            <div class="tags-grid">
              {tags.map(([tag, count]) => {
                const posts = tagPosts.get(tag) || [];
                const recentPosts = posts
                  .sort((a, b) => new Date(b.data.published).getTime() - new Date(a.data.published).getTime())
                  .slice(0, 3);
                
                return (
                  <div class="tag-card">
                    <div class="tag-header">
                      <div class="tag-icon">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="M20.59 13.41l-7.17 7.17a2 2 0 01-2.83 0L2 12V2h10l8.59 8.59a2 2 0 010 2.82z"></path>
                          <line x1="7" y1="7" x2="7.01" y2="7"></line>
                        </svg>
                      </div>
                      <div class="tag-info">
                        <h3 class="tag-name">
                          <a href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}>
                            #{tag}
                          </a>
                        </h3>
                        <p class="tag-count">
                          {count} 篇文章
                        </p>
                      </div>
                    </div>

                    {recentPosts.length > 0 && (
                      <div class="recent-posts">
                        <ul class="recent-posts-list">
                          {recentPosts.map((post) => (
                            <li class="recent-post-item">
                              <a href={`/posts/${post.id}`} class="recent-post-link">
                                <span class="recent-post-title">{post.data.title}</span>
                                <time class="recent-post-date">
                                  {new Date(post.data.published).toLocaleDateString(
                                    locale === 'zh-CN' ? 'zh-CN' : 'en-US',
                                    { month: 'short', day: 'numeric' }
                                  )}
                                </time>
                              </a>
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}

                    <div class="tag-footer">
                      <a href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`} class="view-all-link">
                        查看全部
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="m9 18 6-6-6-6"></path>
                        </svg>
                      </a>
                    </div>
                  </div>
                );
              })}
            </div>
          </section>
        </div>
      )}
    </div>
  </div>
</Layout>

<style>
  @reference "tailwindcss";

  .container {
    @apply max-w-7xl;
  }

  .section-title {
    @apply text-2xl font-bold text-gray-900 dark:text-white mb-6;
  }

  /* Tag Cloud */
  .tag-cloud-section {
    @apply bg-white rounded-xl p-8 shadow-sm border;
    @apply dark:bg-gray-800 dark:border-gray-700;
  }

  .tag-cloud {
    @apply flex flex-wrap gap-3 justify-center items-center min-h-[200px];
  }

  .tag-cloud-item {
    @apply inline-block px-3 py-1 rounded-full font-medium transition-all duration-300;
    @apply text-gray-600 bg-gray-100 hover:bg-blue-100 hover:text-blue-600;
    @apply dark:text-gray-300 dark:bg-gray-700 dark:hover:bg-blue-900/30 dark:hover:text-blue-400;
    @apply hover:scale-110 hover:shadow-md;
  }

  /* Tags Grid */
  .tags-grid {
    @apply grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4;
  }

  .tag-card {
    @apply bg-white rounded-lg shadow-sm border transition-all duration-300;
    @apply hover:shadow-md hover:-translate-y-1;
    @apply dark:bg-gray-800 dark:border-gray-700;
  }

  .tag-header {
    @apply flex items-center space-x-3 p-4 pb-3;
  }

  .tag-icon {
    @apply flex h-8 w-8 items-center justify-center rounded-lg bg-blue-50 text-blue-600;
    @apply dark:bg-blue-900/30 dark:text-blue-400;
  }

  .tag-info {
    @apply flex-1;
  }

  .tag-name a {
    @apply text-lg font-semibold text-gray-900 transition-colors;
    @apply hover:text-blue-600 dark:text-white dark:hover:text-blue-400;
  }

  .tag-count {
    @apply text-xs text-gray-500 dark:text-gray-400;
  }

  .recent-posts {
    @apply px-4 pb-3;
  }

  .recent-posts-list {
    @apply space-y-2;
  }

  .recent-post-item {
    @apply border-l-2 border-gray-100 dark:border-gray-700 pl-2;
  }

  .recent-post-link {
    @apply flex items-start justify-between;
  }

  .recent-post-title {
    @apply text-sm text-gray-700 dark:text-gray-300 transition-colors line-clamp-1;
    @apply group-hover:text-blue-600 dark:group-hover:text-blue-400;
    flex: 1;
    margin-right: 0.5rem;
  }

  .recent-post-date {
    @apply text-xs text-gray-400 dark:text-gray-600 flex-shrink-0;
  }

  .tag-footer {
    @apply px-4 pb-4;
  }

  .view-all-link {
    @apply flex items-center space-x-1 text-sm font-medium text-blue-600 transition-colors;
    @apply hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300;
  }

  .view-all-link svg {
    @apply transition-transform;
    @apply group-hover:translate-x-0.5;
  }
</style> 