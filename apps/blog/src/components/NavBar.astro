---
import AsukaConfig from "../../asuka.config";
import { getTranslation } from "../utils/i18n";
import type { Locale } from "../utils/i18n";
import I18nKeys from "../locales/keys";

const locale = AsukaConfig.locale as Locale;
const navCount = AsukaConfig.navigators.length;
---

<nav class="nav" id="nav">
  <div class="nav-container">
    <!-- Mobile Brand & Menu Toggle -->
    <div class="brand">
      <button
        id="menu-switcher"
        type="button"
        class="menu-toggle"
        aria-label="Toggle mobile menu"
      >
        <span class="hamburger"></span>
        <span class="hamburger"></span>
        <span class="hamburger"></span>
      </button>
      <a class="title" href="/">
        {AsukaConfig.brandTitle}
      </a>
    </div>

    <!-- Desktop Brand -->
    <a class="brand-lg" href="/">
      <div class="title">
        <span class="brand-icon">üè†</span>
        <p>{AsukaConfig.brandTitle}</p>
      </div>
    </a>

    <!-- Desktop Menu -->
    <div class="menu">
      {AsukaConfig.navigators.map((nav) => (
        <a href={nav.href}>
          <p>{getTranslation(locale, nav.nameKey)}</p>
        </a>
      ))}
    </div>

    <!-- Toolbar -->
    <div class="toolbar">
      <!-- Search -->
      <div class="search-container">
        <button type="button" id="search-toggle" class="search-button" aria-label="Toggle search">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
        </button>
        <div id="search-bar" class="search-bar hidden">
          <input 
            type="text" 
            id="search-input" 
                         placeholder={getTranslation(locale, I18nKeys.nav_bar_search_placeholder)}
            class="search-input"
          />
        </div>
      </div>

      <!-- Theme Toggle -->
      <button type="button" id="theme-switcher" class="theme-toggle" aria-label="Toggle theme">
        <svg id="theme-icon-light" class="theme-icon hidden" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <circle cx="12" cy="12" r="5"></circle>
          <path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"></path>
        </svg>
        <svg id="theme-icon-dark" class="theme-icon hidden" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="mobile-menu">
    <ul class="mobile-menu-nav">
      {AsukaConfig.navigators.map((nav) => (
        <li>
          <a href={nav.href} class="mobile-nav-item">
            <div class="nav-item-content">
              <span class="nav-bullet">¬∑</span>
              <span>{getTranslation(locale, nav.nameKey)}</span>
            </div>
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="m9 18 6-6-6-6"></path>
            </svg>
          </a>
        </li>
      ))}
    </ul>
  </div>
</nav>

<script>
  // Menu toggle functionality
  const menuSwitcher = document.getElementById('menu-switcher');
  const mobileMenu = document.getElementById('mobile-menu');
  let isMenuOpen = false;

  menuSwitcher?.addEventListener('click', () => {
    isMenuOpen = !isMenuOpen;
    mobileMenu?.classList.toggle('open', isMenuOpen);
    menuSwitcher.classList.toggle('open', isMenuOpen);
  });

  // Search toggle functionality
  const searchToggle = document.getElementById('search-toggle');
  const searchBar = document.getElementById('search-bar');
  const searchInput = document.getElementById('search-input');

  searchToggle?.addEventListener('click', () => {
    searchBar?.classList.toggle('hidden');
    if (!searchBar?.classList.contains('hidden')) {
      searchInput?.focus();
    }
  });

  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-switcher');
  const lightIcon = document.getElementById('theme-icon-light');
  const darkIcon = document.getElementById('theme-icon-dark');

  function updateThemeIcons() {
    const isDark = document.documentElement.classList.contains('dark');
    lightIcon?.classList.toggle('hidden', isDark);
    darkIcon?.classList.toggle('hidden', !isDark);
  }

  function setTheme(theme: string) {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
    localStorage.setItem('theme', theme);
    updateThemeIcons();
  }

  themeToggle?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.contains('dark');
    setTheme(isDark ? 'light' : 'dark');
  });

  // Initialize theme
  const savedTheme = localStorage.getItem('theme') || 
    (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  setTheme(savedTheme);
</script>

<style define:vars={{ navCount }}>
 
  @reference "tailwindcss";
  .nav {
    @apply fixed left-1/2 z-50 flex w-full max-w-6xl flex-col rounded-b-xl bg-white/80 backdrop-blur-md transition-all duration-300;
    @apply dark:bg-gray-900/80;
    transform: translateX(-50%);
    animation: slideDown 0.3s ease-out;
  }

  .nav-container {
    @apply relative flex h-16 w-full items-center justify-between px-4 lg:px-6;
  }

  /* Mobile Brand */
  .brand {
    @apply flex w-full items-center justify-between lg:hidden;
  }

  .brand .title {
    @apply absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-xl font-bold text-blue-600 transition-colors;
    @apply hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300;
  }

  .menu-toggle {
    @apply flex h-10 w-10 flex-col items-center justify-center space-y-1 rounded-lg transition-colors;
    @apply hover:bg-gray-100 dark:hover:bg-gray-800;
  }

  .hamburger {
    @apply h-0.5 w-6 bg-gray-600 transition-all duration-300;
    @apply dark:bg-gray-300;
  }

  .menu-toggle.open .hamburger:nth-child(1) {
    transform: translateY(6px) rotate(45deg);
  }

  .menu-toggle.open .hamburger:nth-child(2) {
    opacity: 0;
  }

  .menu-toggle.open .hamburger:nth-child(3) {
    transform: translateY(-6px) rotate(-45deg);
  }

  /* Desktop Brand */
  .brand-lg {
    @apply hidden items-center space-x-3 rounded-lg px-4 py-2 transition-colors lg:flex;
    @apply hover:bg-gray-100 dark:hover:bg-gray-800;
  }

  .brand-lg .title {
    @apply flex items-center space-x-2 text-xl font-bold text-blue-600;
    @apply dark:text-blue-400;
  }

  .brand-icon {
    @apply text-2xl;
  }

  /* Desktop Menu */
  .menu {
    @apply absolute left-1/2 hidden -translate-x-1/2 items-center space-x-1 lg:flex;
  }

  .menu a {
    @apply rounded-lg px-4 py-2 font-medium text-gray-700 transition-colors;
    @apply hover:bg-gray-100 hover:text-blue-600;
    @apply dark:text-gray-300 dark:hover:bg-gray-800 dark:hover:text-blue-400;
  }

  /* Toolbar */
  .toolbar {
    @apply flex items-center space-x-2;
  }

  .search-container {
    @apply relative;
  }

  .search-button, .theme-toggle {
    @apply flex h-10 w-10 items-center justify-center rounded-lg text-gray-600 transition-colors;
    @apply hover:bg-gray-100 hover:text-blue-600;
    @apply dark:text-gray-400 dark:hover:bg-gray-800 dark:hover:text-blue-400;
  }

  .search-bar {
    @apply absolute right-0 top-12 w-64 rounded-lg bg-white p-2 shadow-lg;
    @apply dark:bg-gray-800;
  }

  .search-input {
    @apply w-full rounded-md border border-gray-300 px-3 py-2 text-sm;
    @apply focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500;
    @apply dark:border-gray-600 dark:bg-gray-700 dark:text-white;
  }

  /* Mobile Menu */
  .mobile-menu {
    @apply max-h-0 overflow-hidden transition-all duration-300 lg:hidden;
  }

  .mobile-menu.open {
    max-height: calc(var(--navCount) * 3.5rem + 1rem);
  }

  .mobile-menu-nav {
    @apply flex flex-col space-y-1 px-4 pb-4;
  }

  .mobile-nav-item {
    @apply flex items-center justify-between rounded-lg px-4 py-3 text-gray-700 transition-colors;
    @apply hover:bg-gray-100 hover:text-blue-600;
    @apply dark:text-gray-300 dark:hover:bg-gray-800 dark:hover:text-blue-400;
  }

  .nav-item-content {
    @apply flex items-center space-x-3;
  }

  .nav-bullet {
    @apply text-blue-600 dark:text-blue-400;
  }

  @keyframes slideDown {
    from {
      transform: translateX(-50%) translateY(-100%);
      opacity: 0;
    }
    to {
      transform: translateX(-50%) translateY(0);
      opacity: 1;
    }
  }
</style> 