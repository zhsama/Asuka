---
import AsukaConfig from "~/asuka.config";
import { Icon } from "astro-icon/components";
import { i18n } from "@/i18n/translation";
import ThemeSwitcher from "@/components/ThemeSwitcher";
import ErrorBoundary from "@/components/React/ErrorBoundary";
import { env } from "@/config/env";

const navCount = AsukaConfig.navigators.length;
---

<nav class="nav" id="nav">
  <div
    class="relative flex h-[4rem] w-full items-center justify-between overflow-visible lg:h-[4.5rem]"
  >
    <div class="brand after:content-['']">
      <button
        id="menu-switcher"
        type="button"
        class="h-[40px] w-[44px] content-center"
      >
        <Icon
          id="menu-icon-closed"
          size={24}
          name="line-md:close-to-menu-transition"
          class="mx-auto hidden"
        />
        <Icon
          id="menu-icon-opened"
          size={24}
          name="line-md:menu-to-close-transition"
          class="mx-auto hidden"
        />
      </button>
      <a class="title" href={AsukaConfig.site}>
        {AsukaConfig.brandTitle}
      </a>
    </div>
    <a class="brand-lg" href={env.PUBLIC_MAIN_URL}>
      <div class="title space-x-2">
        <Icon name="heroicons:home" size={32} />
        <p>{AsukaConfig.brandTitle}</p>
      </div>
    </a>
    <div class="menu">
      {
        AsukaConfig.navigators.map((nav) => (
          <a href={nav.href}>
            <p>{i18n(nav.nameKey)}</p>
          </a>
        ))
      }
    </div>
    <div class="toolbar">
      <!-- EVA主题切换器 (使用shadcn下拉菜单) -->
      <ErrorBoundary client:load>
        <ThemeSwitcher client:load />
      </ErrorBoundary>
      <!-- 亮暗模式切换 -->
      <div class="theme">
        <button type="button" id="theme-switcher">
          <Icon
            id="theme-icon-light"
            name="line-md:moon-alt-to-sunny-outline-loop-transition"
            size={24}
            class="hidden"
          />
          <Icon
            id="theme-icon-dark"
            name="line-md:sunny-outline-to-moon-alt-loop-transition"
            size={24}
            class="hidden"
          />
        </button>
      </div>
    </div>
  </div>
  <div id="mobile-menu" class="px-3 transition-all">
    <ul
      id="mobile-menu-nav"
      class="mobile-menu-nav mobile-menu-nav-closed flex flex-col space-y-6 overflow-hidden text-xl font-medium text-[var(--text-color)] transition-all duration-300"
    >
      {
          AsukaConfig.navigators.map((nav) => (
          <li class="mt-1">
            <a href={nav.href} class="mobile-nav-item">
              <div class="flex flex-row items-center space-x-2">
                <span class="text-[var(--primary-color)]">·</span>
                <span>{i18n(nav.nameKey)}</span>
              </div>
              <Icon
                name="cuida:caret-right-outline"
                class="text-[var(--text-color-lighten)]"
              />
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</nav>

<script>
  // Menu toggle functionality
  const menuSwitcher = document.getElementById('menu-switcher');
  const mobileMenu = document.getElementById('mobile-menu');
  let isMenuOpen = false;

  menuSwitcher?.addEventListener('click', () => {
    isMenuOpen = !isMenuOpen;
    mobileMenu?.classList.toggle('open', isMenuOpen);
    menuSwitcher.classList.toggle('open', isMenuOpen);
  });

  // Search toggle functionality
  const searchToggle = document.getElementById('search-toggle');
  const searchBar = document.getElementById('search-bar');
  const searchInput = document.getElementById('search-input');

  searchToggle?.addEventListener('click', () => {
    searchBar?.classList.toggle('hidden');
    if (!searchBar?.classList.contains('hidden')) {
      searchInput?.focus();
    }
  });

  // Theme toggle functionality (dark/light mode)
  const themeToggle = document.getElementById('theme-switcher');
  const lightIcon = document.getElementById('theme-icon-light');
  const darkIcon = document.getElementById('theme-icon-dark');

  function updateThemeIcons() {
    const isDark = document.documentElement.classList.contains('dark');
    lightIcon?.classList.toggle('hidden', isDark);
    darkIcon?.classList.toggle('hidden', !isDark);
  }

  function setTheme(theme: string) {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
    localStorage.setItem('theme', theme);
    updateThemeIcons();
  }

  themeToggle?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.contains('dark');
    setTheme(isDark ? 'light' : 'dark');
  });

  // Initialize theme
  const savedTheme = localStorage.getItem('theme') ||
    (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  setTheme(savedTheme);
</script>

<style define:vars={{ navCount }}>
  @reference "tailwindcss";

  .nav {
    @apply fixed left-1/2 z-10 flex w-full select-none flex-col justify-end rounded-b-xl px-2.5 opacity-0 transition-all duration-500;
    @apply lg:w-[var(--page-width-lg)] lg:rounded-b-2xl;
    @apply xl:w-[var(--page-width-xl)];
    top: 0;
    transform: translateX(-50%);
    animation: 300ms nav-onload-animation;
    animation-fill-mode: forwards;
    max-width: 100vw;
    box-sizing: border-box;

    /* 亮色模式毛玻璃材质效果 */
    background: rgba(255, 255, 255, 0.45);
    backdrop-filter: blur(40px) saturate(180%) brightness(110%);
    -webkit-backdrop-filter: blur(40px) saturate(180%) brightness(110%);
    box-shadow:
      0 8px 32px rgba(0, 0, 0, 0.08),
      0 2px 4px rgba(0, 0, 0, 0.04),
      0 1px 1px rgba(255, 255, 255, 0.8),
      inset 0 1px 0 rgba(255, 255, 255, 0.9),
      inset 0 -1px 0 rgba(0, 0, 0, 0.03);
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  /* 深色模式毛玻璃效果 */
  :root.dark .nav {
    background: rgba(0, 0, 0, 0.55);
    backdrop-filter: blur(40px) saturate(160%) brightness(120%);
    -webkit-backdrop-filter: blur(40px) saturate(160%) brightness(120%);
    box-shadow:
      0 8px 32px rgba(0, 0, 0, 0.4),
      0 2px 8px rgba(0, 0, 0, 0.2),
      0 1px 1px rgba(255, 255, 255, 0.15),
      inset 0 1px 0 rgba(255, 255, 255, 0.2),
      inset 0 -1px 0 rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.15);
  }

  /* EVA主题特定毛玻璃效果 */
  :root.eva-02 .nav {
    background: rgba(255, 250, 248, 0.45);
    border: 1px solid rgba(255, 180, 160, 0.25);
  }

  :root.eva-02.dark .nav {
    background: rgba(20, 10, 8, 0.6);
    border: 1px solid rgba(255, 100, 80, 0.2);
  }

  :root.eva-01 .nav {
    background: rgba(252, 250, 255, 0.45);
    border: 1px solid rgba(200, 180, 220, 0.25);
  }

  :root.eva-01.dark .nav {
    background: rgba(15, 10, 20, 0.6);
    border: 1px solid rgba(150, 120, 200, 0.2);
  }

  :root.eva-00 .nav {
    background: rgba(248, 252, 255, 0.45);
    border: 1px solid rgba(180, 200, 230, 0.25);
  }

  :root.eva-00.dark .nav {
    background: rgba(8, 15, 25, 0.6);
    border: 1px solid rgba(100, 150, 200, 0.2);
  }

  /* 移动端适配 */
  @media (max-width: 768px) {
    .nav {
      @apply px-2;
      width: calc(100vw - 1rem);
      max-width: calc(100vw - 1rem);
      background: rgba(255, 255, 255, 0.55);
      backdrop-filter: blur(30px) saturate(150%) brightness(105%);
      -webkit-backdrop-filter: blur(30px) saturate(150%) brightness(105%);
    }

    :root.dark .nav {
      background: rgba(0, 0, 0, 0.65);
      backdrop-filter: blur(30px) saturate(140%) brightness(115%);
      -webkit-backdrop-filter: blur(30px) saturate(140%) brightness(115%);
    }

    /* 移动端EVA主题毛玻璃 */
    :root.eva-02 .nav {
      background: rgba(255, 250, 248, 0.55);
    }

    :root.eva-02.dark .nav {
      background: rgba(20, 10, 8, 0.7);
    }

    :root.eva-01 .nav {
      background: rgba(252, 250, 255, 0.55);
    }

    :root.eva-01.dark .nav {
      background: rgba(15, 10, 20, 0.7);
    }

    :root.eva-00 .nav {
      background: rgba(248, 252, 255, 0.55);
    }

    :root.eva-00.dark .nav {
      background: rgba(8, 15, 25, 0.7);
    }
  }

  .brand {
    @apply flex w-full flex-row items-center justify-between;
    @apply lg:hidden;
  }

  .brand > .title {
    @apply absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 truncate rounded-lg px-4 py-2 text-2xl font-medium text-[var(--primary-color)] transition-all;
    @apply hover:bg-[var(--primary-color-hover)];
    font-family: var(--brand-font);
  }

  .brand button {
    @apply mr-2 flex h-[44px] w-[44px] flex-row items-center rounded-lg text-[var(--text-color)] transition-all;
    @apply hover:bg-[var(--primary-color-hover)] hover:text-[var(--primary-color)];
  }

  .brand .icon {
    @apply w-full text-center text-2xl;
  }

  .brand-lg {
    @apply hidden h-[3.25rem] rounded-lg px-5 font-medium transition-all;
    @apply lg:block;
    @apply hover:bg-[var(--primary-color-hover)];
    @apply active:scale-95;
  }

  .brand-lg > .title {
    @apply flex h-full flex-row content-center items-center text-2xl text-[var(--primary-color)];
    font-family: var(--brand-font);
  }

  .brand-lg .icon {
    @apply mr-2 stroke-2 text-2xl;
  }

  .menu {
    @apply absolute left-1/2 hidden -translate-x-1/2 items-center justify-between space-x-1 text-lg text-[var(--text-color)] opacity-85;
    @apply lg:flex;
  }

  .menu a {
    @apply flex h-[3.25rem] items-center rounded-lg px-6 transition-all;
    @apply hover:bg-[var(--primary-color-hover)] hover:text-[var(--primary-color)];
    @apply active:scale-95;
  }

  .menu p {
    @apply font-medium leading-normal;
    font-family: var(--primary-font);
  }

  .toolbar {
    @apply flex flex-row items-center justify-end space-x-1 lg:mr-2;
  }

  .toolbar button {
    @apply flex w-11 justify-center rounded-lg py-2 text-[var(--text-color)] transition-all;
    @apply hover:bg-[var(--primary-color-hover)] hover:text-[var(--primary-color)];
  }

  .toolbar .icon {
    @apply stroke-2 text-xl;
  }

  /* EVA主题颜色样式 - 用于主题切换器中的颜色圆点 */
  .eva-theme-color {
    @apply w-4 h-4 rounded-full border-2 border-white shadow-sm;
  }

  .eva-02-color {
    background: linear-gradient(135deg, oklch(45% 0.35 12), oklch(72% 0.28 25));
  }

  .eva-01-color {
    background: linear-gradient(135deg, oklch(40% 0.15 260), oklch(65% 0.22 125));
  }

  .eva-00-color {
    background: linear-gradient(135deg, oklch(35% 0.12 210), oklch(85% 0.01 0));
  }

  .mobile-menu-nav-closed {
    @apply h-0 opacity-0;
  }

  .mobile-menu-nav-opened {
    @apply opacity-100;
    height: calc(var(--navCount) * 52px);
  }

  .mobile-menu-nav li a {
    @apply flex flex-row items-center justify-between;
    font-family: var(--primary-font);
  }

  @keyframes nav-onload-animation {
    0% {
      top: -5rem;
      transform: translateX(-50%);
      opacity: 0;
    }
    100% {
      top: 0;
      transform: translateX(-50%);
      opacity: 1;
    }
  }
</style>
