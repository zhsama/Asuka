---
import AsukaConfig from "../../asuka.config";

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
}

const { title, description, image, canonicalURL } = Astro.props;

const pageTitle = title ? `${title} | ${AsukaConfig.title}` : AsukaConfig.title;
const pageDescription = description || AsukaConfig.description;
const pageImage = image || AsukaConfig.seo?.ogImage || "/og-image.png";
const pageCanonical = canonicalURL || new URL(Astro.url.pathname, Astro.site);
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/x-icon" href="/favicon.jpg" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={pageCanonical} />

<!-- Primary Meta Tags -->
<title>{pageTitle}</title>
<meta name="title" content={pageTitle} />
<meta name="description" content={pageDescription} />
<meta name="author" content={AsukaConfig.username} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={pageTitle} />
<meta property="og:description" content={pageDescription} />
<meta property="og:image" content={new URL(pageImage, Astro.site)} />
<meta property="og:site_name" content={AsukaConfig.title} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={pageTitle} />
<meta property="twitter:description" content={pageDescription} />
<meta property="twitter:image" content={new URL(pageImage, Astro.site)} />
{AsukaConfig.seo?.twitter && <meta property="twitter:site" content={AsukaConfig.seo.twitter} />}

<!-- RSS AutoDiscovery -->
<link
  rel="alternate"
  type="application/rss+xml"
  title={AsukaConfig.title}
  href={new URL("rss.xml", Astro.site)}
/>

<!-- SiteMap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Fonts -->
<link rel="preconnect" href="https://fonts.bunny.net" />
<link
  href="https://fonts.bunny.net/css?family=noto-sans-sc:300,400,500,600,700|inter:300,400,500,600,700"
  rel="stylesheet"
/>

<!-- Math rendering -->
<link
  rel="stylesheet"
  href="https://fastly.jsdelivr.net/npm/katex/dist/katex.min.css"
/>

<!-- Global Styles -->
<style is:global>
  :root {
    --font-family-base: 'Inter', 'Noto Sans SC', system-ui, sans-serif;
    --font-family-title: 'Inter', 'Noto Sans SC', system-ui, sans-serif;
    --font-family-subtitle: 'Inter', 'Noto Sans SC', system-ui, sans-serif;
    --background-color: #ffffff;
    --text-color: #1f2937;
    --title-color: #111827;
    --subtitle-color: #6b7280;
    --primary-color: #3b82f6;
    --secondary-color: #64748b;
    --border-color: #e5e7eb;
    --banner-height: 60vh;
  }

  .dark {
    --background-color: #111827;
    --text-color: #f9fafb;
    --title-color: #ffffff;
    --subtitle-color: #d1d5db;
    --border-color: #374151;
  }

  * {
    box-sizing: border-box;
  }

  html {
    font-family: var(--font-family-base);
    scroll-behavior: smooth;
  }

  body {
    background-color: var(--background-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  .onload-animation-fade-in {
    animation: fadeIn 0.8s ease-in-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style> 