---
import "@/styles/markdown.css";

export interface Props {
  class?: string;
}

const { class: className } = Astro.props;
---

<div class={`markdown-content article ${className ?? ''}`}>
  <slot />
</div>

<script>
  const observer = new MutationObserver(addPreCopyButton);
  observer.observe(document.body, { childList: true, subtree: true });

  document.addEventListener("DOMContentLoaded", addPreCopyButton);

  function addPreCopyButton() {
    observer.disconnect();

    let codeBlocks = Array.from(document.querySelectorAll("pre"));

    for (let codeBlock of codeBlocks) {
      if (
        codeBlock.parentElement?.nodeName === "DIV" &&
        codeBlock.parentElement?.classList.contains("code-block")
      )
        continue;

      let wrapper = document.createElement("div");
      wrapper.className = "relative code-block";

      let copyButton = document.createElement("button");
      copyButton.className =
        "copy-btn btn-regular-dark absolute active:scale-90 h-8 w-8 top-2 right-2 opacity-75 text-sm p-1.5 rounded-lg transition-all ease-in-out";

      codeBlock.setAttribute("tabindex", "0");
      if (codeBlock.parentNode) {
        codeBlock.parentNode.insertBefore(wrapper, codeBlock);
      }

      let copyIcon = `<svg class="copy-btn-icon copy-icon" xmlns="http://www.w3.org/2000/svg" height="20px" viewBox="0 -960 960 960" width="20px"><path d="M368.37-237.37q-34.48 0-58.74-24.26-24.26-24.26-24.26-58.74v-474.26q0-34.48 24.26-58.74 24.26-24.26 58.74-24.26h378.26q34.48 0 58.74 24.26 24.26 24.26 24.26 58.74v474.26q0 34.48-24.26 58.74-24.26 24.26-58.74 24.26H368.37Zm0-83h378.26v-474.26H368.37v474.26Zm-155 238q-34.48 0-58.74-24.26-24.26-24.26-24.26-58.74v-515.76q0-17.45 11.96-29.48 11.97-12.02 29.33-12.02t29.54 12.02q12.17 12.03 12.17 29.48v515.76h419.76q17.45 0 29.48 11.96 12.02 11.97 12.02 29.33t-12.02 29.54q-12.03 12.17-29.48 12.17H213.37Zm155-238v-474.26 474.26Z"/></svg>`;
      let successIcon = `<svg class="copy-btn-icon success-icon" xmlns="http://www.w3.org/2000/svg" height="20px" viewBox="0 -960 960 960" width="20px"><path d="m389-377.13 294.7-294.7q12.58-12.67 29.52-12.67 16.93 0 29.61 12.67 12.67 12.68 12.67 29.53 0 16.86-12.28 29.14L419.07-288.41q-12.59 12.67-29.52 12.67-16.94 0-29.62-12.67L217.41-430.93q-12.67-12.68-12.79-29.45-.12-16.77 12.55-29.45 12.68-12.67 29.62-12.67 16.93 0 29.28 12.67L389-377.13Z"/></svg>`;
      copyButton.innerHTML = `<div>${copyIcon} ${successIcon}</div>
      `;

      wrapper.appendChild(codeBlock);
      wrapper.appendChild(copyButton);

      let timeout: ReturnType<typeof setTimeout>;
      copyButton.addEventListener("click", async () => {
        if (timeout) {
          clearTimeout(timeout);
        }
        let text = codeBlock?.querySelector("code")?.innerText;
        if (text === undefined) return;
        await navigator.clipboard.writeText(text);
        copyButton.classList.add("success");
        timeout = setTimeout(() => {
          copyButton.classList.remove("success");
        }, 1000);
      });
    }

    observer.observe(document.body, { childList: true, subtree: true });
  }

  // 代码块滚动指示器
  function setupCodeBlockScrollIndicators() {
    const codeBlocks = document.querySelectorAll('.astro-code');
    
    codeBlocks.forEach(codeBlock => {
      const checkScrollable = () => {
        const isScrollable = codeBlock.scrollHeight > codeBlock.clientHeight;
        const isScrolledToBottom = Math.abs(codeBlock.scrollHeight - codeBlock.clientHeight - codeBlock.scrollTop) < 1;
        
        if (isScrollable && !isScrolledToBottom) {
          codeBlock.classList.add('has-more-content');
        } else {
          codeBlock.classList.remove('has-more-content');
        }
      };
      
      // 初始检查
      checkScrollable();
      
      // 滚动时检查
      codeBlock.addEventListener('scroll', checkScrollable);
      
      // 内容变化时检查
      const resizeObserver = new ResizeObserver(checkScrollable);
      resizeObserver.observe(codeBlock);
    });
  }
  
  // 在DOM加载完成和内容变化时设置滚动指示器
  document.addEventListener("DOMContentLoaded", setupCodeBlockScrollIndicators);
  
  // 监听动态内容变化
  const codeObserver = new MutationObserver(setupCodeBlockScrollIndicators);
  codeObserver.observe(document.body, { childList: true, subtree: true });
</script>

<style is:inline>
  @reference "tailwindcss";
  
  /* 移动端防溢出增强 */
  .markdown-content {
    overflow-x: hidden;
    max-width: 100%;
    word-wrap: break-word;
  }
  
  @media (max-width: 768px) {
    .markdown-content {
      padding: 0;
      margin: 0;
    }
    
    .markdown-content * {
      max-width: 100% !important;
      box-sizing: border-box !important;
    }
  }
  
  .btn-regular-dark {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: oklch(45% 0.02 var(--hue));
    border: 1px solid oklch(60% 0.05 var(--hue) / 30%);
  }

  .btn-regular-dark:hover {
    background-color: oklch(50% 0.03 var(--hue));
    border-color: oklch(70% 0.08 var(--hue) / 50%);
  }

  .btn-regular-dark:active {
    background-color: oklch(55% 0.04 var(--hue));
  }

  .btn-regular-dark.dark {
    background-color: oklch(20% 0.05 var(--hue));
    border: 1px solid oklch(40% 0.10 var(--hue) / 40%);
  }

  .btn-regular-dark.dark:hover {
    background-color: oklch(25% 0.08 var(--hue));
    border-color: oklch(50% 0.12 var(--hue) / 60%);
  }

  .btn-regular-dark.dark:active {
    background-color: oklch(30% 0.10 var(--hue));
  }

  .btn-regular-dark.success {
    background-color: oklch(65% 0.18 var(--hue));
    border-color: oklch(70% 0.20 var(--hue));
  }

  .btn-regular-dark.success.dark {
    background-color: oklch(35% 0.15 var(--hue));
    border-color: oklch(45% 0.18 var(--hue));
  }

  .copy-btn.success .success-icon.dark {
    fill: oklch(95% 0.02 var(--hue));
  }

  .copy-btn-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transition: all 0.3s;
    transform: translate(-50%, -50%);
  }

  .copy-btn .copy-icon {
    opacity: 1;
    fill: oklch(100% 0 0);
  }

  .copy-btn .copy-icon.dark {
    fill: oklch(95% 0.02 var(--hue));
  }

  .copy-btn:hover .copy-icon {
    fill: oklch(100% 0 0);
  }

  .copy-btn:hover .copy-icon.dark {
    fill: oklch(98% 0.01 var(--hue));
  }

  .copy-btn.success .copy-icon {
    opacity: 0;
  }

  .copy-btn .success-icon {
    fill: oklch(100% 0 0);
    opacity: 0;
  }

  .copy-btn .success-icon.dark {
    fill: oklch(95% 0.02 var(--hue));
  }

  .copy-btn.success .success-icon {
    opacity: 1;
  }
</style>
