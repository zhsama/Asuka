---
import Layout from '@/layouts/Layout.astro';
import Nav from '@/components/Nav.astro';
import Footer from '@/components/Footer.astro';
import BlogCard from '@/components/blog/BlogCard.astro';
import BlogFilter from '@/components/blog/BlogFilter.astro';
import BlogPagination from '@/components/blog/BlogPagination.astro';
import { getAllTags, getPostsByTag, paginatePosts } from '@/utils/blog';

// 获取所有标签用于静态生成
export async function getStaticPaths() {
  const tags = getAllTags();
  return tags.map(tag => ({
    params: { tag: tag.name },
    props: { tagInfo: tag }
  }));
}

const { tag } = Astro.params;
const { tagInfo } = Astro.props;

if (!tag) {
  return Astro.redirect('/404');
}

// 获取查询参数
const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page') || '1');
const postsPerPage = 9;

// 获取标签下的文章并分页
const tagPosts = getPostsByTag(tag);
const { posts, pagination } = paginatePosts(tagPosts, currentPage, postsPerPage);

// 页面元数据
const title = `标签: ${tag}`;
const description = `浏览标签 "${tag}" 下的所有文章`;
---

<Layout>
  <Nav />
  
  <main class="tag-page">
    <div class="container">
      <!-- 页面标题 -->
      <header class="page-header">
        <nav class="breadcrumb">
          <a href="/blog" class="breadcrumb-link">博客</a>
          <span class="breadcrumb-separator">/</span>
          <span class="breadcrumb-current">标签</span>
        </nav>
        
        <h1 class="page-title">
          <span class="tag-icon">#</span>
          <span class="tag-name">{tag}</span>
        </h1>
        <p class="page-description">
          找到 <strong>{tagPosts.length}</strong> 篇相关文章
        </p>
      </header>

      <div class="blog-layout">
        <!-- 主内容区 -->
        <div class="blog-main">
          {posts.length > 0 ? (
            <>
              <div class="posts-grid">
                {posts.map(post => (
                  <BlogCard post={post} />
                ))}
              </div>
              
              <!-- 分页 -->
              <BlogPagination 
                pagination={pagination} 
                baseUrl={`/blog/tag/${encodeURIComponent(tag)}`} 
              />
            </>
          ) : (
            <div class="empty-state">
              <div class="empty-icon">🏷️</div>
              <h3 class="empty-title">暂无文章</h3>
              <p class="empty-description">
                标签 "{tag}" 下暂时没有文章，
                <a href="/blog" class="back-link">返回博客首页</a>
              </p>
            </div>
          )}
        </div>

        <!-- 侧边栏 -->
        <aside class="blog-sidebar">
          <BlogFilter currentTags={[tag]} />
        </aside>
      </div>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  @reference "tailwindcss";
  .tag-page {
    @apply min-h-screen pt-24 pb-16;
  }

  .container {
    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
  }

  .page-header {
    @apply mb-12;
  }

  .breadcrumb {
    @apply flex items-center gap-2 text-sm text-[var(--text-muted)] mb-4;
  }

  .breadcrumb-link {
    @apply hover:text-[var(--primary)] transition-colors;
    text-decoration: none;
  }

  .breadcrumb-separator {
    @apply text-[var(--text-muted)];
  }

  .breadcrumb-current {
    @apply text-[var(--text-secondary)];
  }

  .page-title {
    @apply text-4xl md:text-5xl font-bold mb-4 flex items-center;
  }

  .tag-icon {
    @apply text-[var(--secondary)] mr-2;
    text-shadow: 0 0 10px var(--secondary);
  }

  .tag-name {
    @apply text-[var(--text-primary)];
  }

  .page-description {
    @apply text-[var(--text-secondary)] text-lg;
  }

  .page-description strong {
    @apply text-[var(--primary)] font-bold;
  }

  .blog-layout {
    @apply grid grid-cols-1 lg:grid-cols-4 gap-8;
  }

  .blog-main {
    @apply lg:col-span-3;
  }

  .blog-sidebar {
    @apply lg:col-span-1;
  }

  .posts-grid {
    @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12;
  }

  .empty-state {
    @apply text-center py-16;
  }

  .empty-icon {
    @apply text-6xl mb-4;
  }

  .empty-title {
    @apply text-xl font-bold text-[var(--text-primary)] mb-2;
  }

  .empty-description {
    @apply text-[var(--text-muted)];
  }

  .back-link {
    @apply text-[var(--primary)] hover:text-[var(--primary)]/80 transition-colors;
    text-decoration: none;
  }

  /* 响应式设计 */
  @media (max-width: 1024px) {
    .blog-layout {
      @apply grid-cols-1;
    }
    
    .blog-sidebar {
      @apply order-first;
    }
  }

  @media (max-width: 768px) {
    .page-title {
      @apply text-3xl;
    }
    
    .posts-grid {
      @apply grid-cols-1;
    }
  }
</style>