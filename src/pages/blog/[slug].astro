---
import Layout from '@/layouts/Layout.astro';
import Nav from '@/components/Nav.astro';
import Footer from '@/components/Footer.astro';
import BlogCard from '@/components/blog/BlogCard.astro';
import { getPostBySlug, getAllPosts, getRelatedPosts, formatDate, formatReadingTime } from '@/utils/blog';

// 获取所有文章的 slug 用于静态生成
export async function getStaticPaths() {
  const posts = getAllPosts();
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { slug } = Astro.params;
const post = getPostBySlug(slug!);

if (!post) {
  return Astro.redirect('/404');
}

// 获取相关文章
const relatedPosts = getRelatedPosts(post, 3);

// 页面元数据
const title = post.title;
const description = post.description;
---

<Layout>
  <Nav />
  
  <main class="blog-post-page">
    <div class="container">
      <!-- 返回链接 -->
      <nav class="breadcrumb">
        <a href="/blog" class="breadcrumb-link">
          <svg class="breadcrumb-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
          </svg>
          返回博客
        </a>
      </nav>

      <article class="blog-post">
        <!-- 文章头部 -->
        <header class="post-header">
          {post.coverImage && (
            <div class="post-cover">
              <img src={post.coverImage} alt={post.title} />
              <div class="cover-overlay"></div>
            </div>
          )}
          
          <div class="post-meta">
            <div class="meta-tags">
              <span class="category">{post.category}</span>
              {post.featured && (
                <span class="featured-badge">精选</span>
              )}
            </div>
            
            <h1 class="post-title">{post.title}</h1>
            <p class="post-description">{post.description}</p>
            
            <div class="post-info">
              <div class="author-info">
                <span class="author">作者：{post.author}</span>
                <span class="date">发布于 {formatDate(post.publishDate)}</span>
                {post.updateDate && post.updateDate !== post.publishDate && (
                  <span class="update-date">更新于 {formatDate(post.updateDate)}</span>
                )}
              </div>
              
              <div class="reading-info">
                <span class="reading-time">{formatReadingTime(post.readingTime)}</span>
              </div>
            </div>
            
            <div class="post-tags">
              {post.tags.map(tag => (
                <a href={`/blog/tag/${encodeURIComponent(tag)}`} class="tag">
                  #{tag}
                </a>
              ))}
            </div>
          </div>
        </header>

        <!-- 文章内容 -->
        <div class="post-content">
          <div class="content-wrapper" set:html={post.content} />
        </div>

        <!-- 文章底部 -->
        <footer class="post-footer">
          <div class="post-actions">
            <button class="action-btn like-btn" onclick="toggleLike()">
              <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"/>
              </svg>
              <span>点赞</span>
            </button>
            
            <button class="action-btn share-btn" onclick="sharePost()">
              <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
              </svg>
              <span>分享</span>
            </button>
          </div>
        </footer>
      </article>

      <!-- 相关文章 -->
      {relatedPosts.length > 0 && (
        <section class="related-posts">
          <h2 class="section-title">
            <span class="title-icon">🔗</span>
            相关文章
          </h2>
          <div class="related-grid">
            {relatedPosts.map(relatedPost => (
              <BlogCard post={relatedPost} />
            ))}
          </div>
        </section>
      )}
    </div>
  </main>

  <Footer />
</Layout>

<script>
  function toggleLike() {
    const likeBtn = document.querySelector('.like-btn');
    if (likeBtn) {
      likeBtn.classList.toggle('liked');
      // 这里可以添加实际的点赞逻辑
    }
  }

  function sharePost() {
    if (navigator.share) {
      navigator.share({
        title: document.title,
        url: window.location.href
      });
    } else {
      // 复制链接到剪贴板
      navigator.clipboard.writeText(window.location.href).then(() => {
        alert('链接已复制到剪贴板');
      });
    }
  }

  // 全局函数
  (window as any).toggleLike = toggleLike;
  (window as any).sharePost = sharePost;
</script>

<style>
  @reference "tailwindcss";

  .blog-post-page {
    @apply min-h-screen pt-24 pb-16;
  }

  .container {
    @apply max-w-4xl mx-auto px-4 sm:px-6 lg:px-8;
  }

  .breadcrumb {
    @apply mb-8;
  }

  .breadcrumb-link {
    @apply flex items-center gap-2 text-[var(--text-secondary)] hover:text-[var(--primary)] transition-colors duration-200;
    text-decoration: none;
  }

  .breadcrumb-icon {
    @apply w-4 h-4;
  }

  .blog-post {
    @apply bg-[var(--component-bg)] border border-[var(--border-light)] rounded-lg overflow-hidden mb-12;
    backdrop-filter: blur(10px);
  }

  .post-cover {
    @apply relative h-64 md:h-80 overflow-hidden;
  }

  .post-cover img {
    @apply w-full h-full object-cover;
  }

  .cover-overlay {
    @apply absolute inset-0 bg-gradient-to-t from-black/60 to-transparent;
  }

  .post-header {
    @apply p-6 md:p-8;
  }

  .post-meta {
    @apply space-y-4;
  }

  .meta-tags {
    @apply flex items-center gap-3;
  }

  .category {
    @apply px-3 py-1 bg-[var(--primary)]/20 text-[var(--primary)] rounded-full text-sm font-medium;
  }

  .featured-badge {
    @apply px-3 py-1 bg-[var(--accent)] text-white rounded-full text-sm font-medium;
  }

  .post-title {
    @apply text-3xl md:text-4xl font-bold text-[var(--text-primary)] leading-tight;
  }

  .post-description {
    @apply text-lg text-[var(--text-secondary)] leading-relaxed;
  }

  .post-info {
    @apply flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 text-sm text-[var(--text-muted)];
  }

  .author-info {
    @apply flex flex-col sm:flex-row sm:items-center gap-2;
  }

  .author-info span {
    @apply flex items-center;
  }

  .reading-info {
    @apply flex items-center gap-2;
  }

  .post-tags {
    @apply flex flex-wrap gap-2;
  }

  .tag {
    @apply px-2 py-1 bg-[var(--secondary)]/20 text-[var(--secondary)] rounded text-sm hover:bg-[var(--secondary)]/30 transition-colors;
    text-decoration: none;
  }

  .post-content {
    @apply px-6 md:px-8 pb-8;
  }

  /* Markdown 内容样式 */
  .content-wrapper :global(h1),
  .content-wrapper :global(h2),
  .content-wrapper :global(h3),
  .content-wrapper :global(h4),
  .content-wrapper :global(h5),
  .content-wrapper :global(h6) {
    @apply text-[var(--text-primary)] font-bold mt-8 mb-4;
  }

  .content-wrapper :global(h1) { @apply text-2xl; }
  .content-wrapper :global(h2) { @apply text-xl; }
  .content-wrapper :global(h3) { @apply text-lg; }

  .content-wrapper :global(p) {
    @apply text-[var(--text-secondary)] leading-relaxed mb-4;
  }

  .content-wrapper :global(a) {
    @apply text-[var(--primary)] hover:text-[var(--primary)]/80 transition-colors;
  }

  .content-wrapper :global(code) {
    @apply bg-[var(--component-bg)] text-[var(--primary)] px-2 py-1 rounded text-sm;
  }

  .content-wrapper :global(pre) {
    @apply bg-[var(--component-bg)] border border-[var(--border-light)] rounded-lg p-4 overflow-x-auto mb-4;
  }

  .content-wrapper :global(blockquote) {
    @apply border-l-4 border-[var(--primary)] pl-4 italic text-[var(--text-secondary)] my-4;
  }

  .content-wrapper :global(ul),
  .content-wrapper :global(ol) {
    @apply text-[var(--text-secondary)] mb-4 pl-6;
  }

  .content-wrapper :global(li) {
    @apply mb-2;
  }

  .post-footer {
    @apply px-6 md:px-8 pb-6 border-t border-[var(--border-light)] pt-6;
  }

  .post-actions {
    @apply flex items-center gap-4;
  }

  .action-btn {
    @apply flex items-center gap-2 px-4 py-2 bg-[var(--component-bg)] border border-[var(--border-light)] rounded-lg text-[var(--text-secondary)] hover:text-[var(--primary)] hover:border-[var(--primary)] transition-all duration-200;
  }

  .action-btn.liked {
    @apply text-[var(--accent)] border-[var(--accent)];
  }

  .action-btn .icon {
    @apply w-4 h-4;
  }

  .related-posts {
    @apply space-y-6;
  }

  .section-title {
    @apply text-2xl font-bold text-[var(--text-primary)] flex items-center;
  }

  .title-icon {
    @apply mr-3 text-[var(--primary)];
  }

  .related-grid {
    @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .post-title {
      @apply text-2xl;
    }
    
    .post-info {
      @apply flex-col items-start;
    }
    
    .related-grid {
      @apply grid-cols-1;
    }
  }
</style>