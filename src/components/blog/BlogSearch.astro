---
interface Props {
  placeholder?: string;
  currentQuery?: string;
  showSuggestions?: boolean;
}

const { placeholder = "搜索文章...", currentQuery = "", showSuggestions = true } = Astro.props;
---

<div class="blog-search">
  <form class="search-form" method="GET" action="/blog/search">
    <div class="search-input-wrapper">
      <svg class="search-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <circle cx="11" cy="11" r="8"></circle>
        <path d="M21 21l-4.35-4.35"></path>
      </svg>
      
      <input
        type="text"
        name="q"
        class="search-input"
        placeholder={placeholder}
        value={currentQuery}
        autocomplete="off"
        spellcheck="false"
      />
      
      {currentQuery && (
        <button type="button" class="clear-btn" onclick="clearSearch()">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      )}
    </div>
    
    <button type="submit" class="search-btn">
      搜索
    </button>
  </form>
  
  <!-- 搜索建议 -->
  <div class="search-suggestions" id="search-suggestions" style="display: none;">
    <div class="suggestions-header">
      <span class="suggestions-title">热门搜索</span>
    </div>
    <div class="suggestions-list">
      <a href="/blog/tag/Astro" class="suggestion-item">Astro</a>
      <a href="/blog/tag/React" class="suggestion-item">React</a>
      <a href="/blog/tag/TypeScript" class="suggestion-item">TypeScript</a>
      <a href="/blog/tag/前端" class="suggestion-item">前端</a>
      <a href="/blog/tag/CSS" class="suggestion-item">CSS</a>
    </div>
  </div>
</div>

<script>
  // 搜索功能
  function clearSearch() {
    const input = document.querySelector('.search-input') as HTMLInputElement;
    if (input) {
      input.value = '';
      input.focus();
      hideSuggestions();
    }
  }

  function showSuggestions() {
    const suggestions = document.getElementById('search-suggestions');
    if (suggestions) {
      suggestions.style.display = 'block';
    }
  }

  function hideSuggestions() {
    const suggestions = document.getElementById('search-suggestions');
    if (suggestions) {
      suggestions.style.display = 'none';
    }
  }

  // 绑定事件
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.querySelector('.search-input') as HTMLInputElement;
    const searchForm = document.querySelector('.search-form') as HTMLFormElement;
    
    if (searchInput) {
      // 输入框获得焦点时显示建议
      searchInput.addEventListener('focus', () => {
        if (!searchInput.value.trim()) {
          showSuggestions();
        }
      });
      
      // 输入时隐藏建议
      searchInput.addEventListener('input', () => {
        if (searchInput.value.trim()) {
          hideSuggestions();
        } else {
          showSuggestions();
        }
      });
      
      // 键盘事件
      searchInput.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          hideSuggestions();
          searchInput.blur();
        }
      });
    }
    
    // 点击外部隐藏建议
    document.addEventListener('click', (e) => {
      const searchContainer = document.querySelector('.blog-search');
      if (searchContainer && !searchContainer.contains(e.target as Node)) {
        hideSuggestions();
      }
    });
    
    // 表单提交处理
    if (searchForm) {
      searchForm.addEventListener('submit', (e) => {
        const query = searchInput?.value.trim();
        if (!query) {
          e.preventDefault();
          searchInput?.focus();
        }
      });
    }
  });

  // 全局函数，供内联事件使用
  (window as any).clearSearch = clearSearch;
</script>

<style>
  @reference "tailwindcss";
  
  .blog-search {
    @apply relative mb-8;
  }

  .search-form {
    @apply flex gap-3;
  }

  .search-input-wrapper {
    @apply relative flex-1;
  }

  .search-icon {
    @apply absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-[var(--text-muted)] pointer-events-none;
  }

  .search-input {
    @apply w-full pl-10 pr-10 py-3 bg-[var(--component-bg)] border border-[var(--border-light)] rounded-lg text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:border-[var(--primary)] focus:outline-none focus:ring-2 focus:ring-[var(--primary)]/20 transition-all duration-200;
  }

  .clear-btn {
    @apply absolute right-3 top-1/2 -translate-y-1/2 w-5 h-5 text-[var(--text-muted)] hover:text-[var(--accent)] transition-colors duration-200 cursor-pointer;
    background: none;
    border: none;
    padding: 0;
  }

  .clear-btn svg {
    @apply w-full h-full;
  }

  .search-btn {
    @apply px-6 py-3 bg-[var(--primary)] text-black font-medium rounded-lg hover:bg-[var(--primary)]/90 transition-all duration-200 hover:scale-105;
  }

  .search-suggestions {
    @apply absolute top-full left-0 right-0 mt-2 bg-[var(--component-bg)] border border-[var(--border-light)] rounded-lg shadow-lg backdrop-blur-sm z-50;
  }

  .suggestions-header {
    @apply px-4 py-3 border-b border-[var(--border-light)];
  }

  .suggestions-title {
    @apply text-sm font-medium text-[var(--text-muted)];
  }

  .suggestions-list {
    @apply p-2;
  }

  .suggestion-item {
    @apply block px-3 py-2 text-[var(--text-secondary)] hover:text-[var(--primary)] hover:bg-[var(--primary)]/10 rounded transition-all duration-200;
    text-decoration: none;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .search-form {
      @apply flex-col gap-2;
    }
    
    .search-btn {
      @apply w-full;
    }
  }
</style>