---
import type { BlogPost } from '@/types/blog';
import { formatDate, formatReadingTime } from '@/utils/blog';

interface Props {
  post: BlogPost;
  featured?: boolean;
}

const { post, featured = false } = Astro.props;
---

<article class={`blog-card ${featured ? 'featured' : ''}`}>
  {post.coverImage && (
    <div class="blog-card-image">
      <img src={post.coverImage} alt={post.title} loading="lazy" />
      <div class="image-overlay"></div>
    </div>
  )}
  
  <div class="blog-card-content">
    <div class="blog-card-meta">
      <span class="category">{post.category}</span>
      <span class="reading-time">{formatReadingTime(post.readingTime)}</span>
    </div>
    
    <h3 class="blog-card-title">
      <a href={`/blog/${post.slug}`}>{post.title}</a>
    </h3>
    
    <p class="blog-card-description">{post.description}</p>
    
    <div class="blog-card-tags">
      {post.tags.slice(0, 3).map(tag => (
        <span class="tag">#{tag}</span>
      ))}
      {post.tags.length > 3 && (
        <span class="tag-more">+{post.tags.length - 3}</span>
      )}
    </div>
    
    <div class="blog-card-footer">
      <div class="author-info">
        <span class="author">{post.author}</span>
        <span class="date">{formatDate(post.publishDate)}</span>
      </div>
      
      {post.featured && (
        <div class="featured-badge">
          <span>精选</span>
        </div>
      )}
    </div>
  </div>
</article>

<style>
  @reference "tailwindcss";

.blog-card {
  @apply relative bg-[var(--component-bg)] border border-[var(--border-light)] rounded-lg overflow-hidden transition-all duration-300 hover:border-[var(--primary)] hover:shadow-lg hover:shadow-[var(--primary)]/20;
  backdrop-filter: blur(10px);
}

.blog-card.featured {
  @apply border-[var(--primary)]/50;
  box-shadow: 0 0 20px rgba(252, 238, 9, 0.1);
}

.blog-card:hover {
  transform: translateY(-2px);
}

.blog-card-image {
  @apply relative h-48 overflow-hidden;
}

.blog-card-image img {
  @apply w-full h-full object-cover transition-transform duration-300;
}

.blog-card:hover .blog-card-image img {
  transform: scale(1.05);
}

.image-overlay {
  @apply absolute inset-0 bg-gradient-to-t from-black/60 to-transparent;
}

.blog-card-content {
  @apply p-6;
}

.blog-card-meta {
  @apply flex items-center justify-between mb-3 text-sm;
}

.category {
  @apply px-2 py-1 bg-[var(--primary)]/20 text-[var(--primary)] rounded-full text-xs font-medium;
}

.reading-time {
  @apply text-[var(--text-muted)];
}

.blog-card-title {
  @apply mb-3;
}

.blog-card-title a {
  @apply text-xl font-bold text-[var(--text-primary)] hover:text-[var(--primary)] transition-colors duration-200 line-clamp-2;
  text-decoration: none;
}

.blog-card-description {
  @apply text-[var(--text-secondary)] mb-4 line-clamp-3 leading-relaxed;
}

.blog-card-tags {
  @apply flex flex-wrap gap-2 mb-4;
}

.tag {
  @apply px-2 py-1 bg-[var(--secondary)]/20 text-[var(--secondary)] rounded text-xs hover:bg-[var(--secondary)]/30 transition-colors cursor-pointer;
}

.tag-more {
  @apply px-2 py-1 bg-[var(--text-muted)]/20 text-[var(--text-muted)] rounded text-xs;
}

.blog-card-footer {
  @apply flex items-center justify-between;
}

.author-info {
  @apply flex flex-col gap-1;
}

.author {
  @apply text-[var(--text-primary)] font-medium text-sm;
}

.date {
  @apply text-[var(--text-muted)] text-xs;
}

.featured-badge {
  @apply px-2 py-1 bg-[var(--accent)] text-white rounded-full text-xs font-medium;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* 响应式设计 */
@media (max-width: 768px) {
  .blog-card-content {
    @apply p-4;
  }
  
  .blog-card-title a {
    @apply text-lg;
  }
} 
</style>